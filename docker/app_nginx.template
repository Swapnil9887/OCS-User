user  nginx;
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
  worker_connections  1024;
}
http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log  /var/log/nginx/access.log  main;
  sendfile        on;
  keepalive_timeout  65;

  server {
    listen       8080;
    server_name  localhost;
    location / {
      root   /app;
      index  index.html;
      try_files $uri $uri/ /index.html;
    }
    location /api/ {
        proxy_pass ${INTERNAL_OBSERVATION_PORTAL_API_URL};
    }
    location /admin/ {
        proxy_pass ${INTERNAL_OBSERVATION_PORTAL_API_URL};
    }
    location /static/ {
      proxy_pass ${INTERNAL_OBSERVATION_PORTAL_API_URL};
    }
    location /accounts/ {
      # Requests with the query parameter "passthrough" should be routed to the backend. This is
      # necessary because there are paths that are served by the frontend app that also begin
      # with /accounts/
      if ($arg_passthrough) {
        proxy_pass ${INTERNAL_OBSERVATION_PORTAL_API_URL};
      }
      # If a redirect is sent from the backend, add the "passthrough" query param to the location,
      # preserving any other query params that may already be present
      proxy_redirect ~\/accounts\/(.*) /accounts/$1?passthrough=true;
      proxy_redirect ~\/accounts\/(.*)\?(.*) /accounts/$1?passthrough=true&$2;
      absolute_redirect off;

      root   /app;
      index  index.html;
      try_files $uri $uri/ /index.html;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   /usr/share/nginx/html;
    }
  }
}

